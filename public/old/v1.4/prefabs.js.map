{
  "version": 3,
  "sources": ["../src/lib/utils.ts", "../src/lib/delayed-renderer.ts", "../src/lib/errors.ts", "../src/lib/events.ts", "../src/lib/labels.ts", "../src/lib/label-handler.ts", "../src/lib/ui/min-max-inputs.ts", "../src/lib/ui/preset-button.ts", "../src/lib/ui/sync-output.ts", "../src/lib/url-state.ts", "../src/prefabs.ts"],
  "sourcesContent": ["export function requireNonnull<T>(t: T | undefined | null, errorMessage = () => `Unexpected state: ${String(t)}`): T {\n  if (t == null) throw Error(errorMessage());\n  return t;\n}\n\nexport function strictParseInt(s: string | undefined | null, errorMessage = () => `Unexpected argument: ${String(s)}`): number {\n  const n = parseInt(s ?? \"\");\n  if (isNaN(n)) throw Error(errorMessage());\n  return n;\n}\n\nexport function requireType<T>(\n  o: unknown,\n  t: new (...a: unknown[]) => T,\n  errorMessage = () => `Unexpected type: expected as ${String(t)}, but actual type ${String(o)}`,\n): T {\n  if (o instanceof t) return o;\n  throw Error(errorMessage());\n}\n\nexport function component<T extends HTMLElement = HTMLElement>(id: string | undefined | null, t?: new (...a: unknown[]) => T): T {\n  const i = requireNonnull(id, () => \"Unexpected argument: id is null\");\n  const e = requireNonnull(document.getElementById(i), () => `Element not found: #${i}`);\n  return t ? requireType(e, t) : (e as T);\n}\n\nexport function removeAllChildren(e: HTMLElement): void {\n  while (e.lastChild) e.removeChild(e.lastChild);\n}\n\nexport function humanreadableDistance([direction, distance]: [Direction | null, number]): string {\n  const dir = direction ?? \"\";\n  if (distance < 1000) {\n    return `${dir} ${distance.toString()}m`;\n  }\n  return `${dir} ${(distance / 1000).toFixed(2)}km`;\n}\n\nexport function waitAnimationFrame(): Promise<number> {\n  return new Promise((r) => requestAnimationFrame(r));\n}\n\ninterface EventOffsets {\n  offsetX: number;\n  offsetY: number;\n}\n\nexport async function formatCoords(\n  map: GameMapSize | null,\n  canvas: HTMLCanvasElement,\n  elevation: (coods: GameCoords) => Promise<number | null>,\n  event: EventOffsets | null,\n): Promise<string> {\n  if (!event || !map) return \"E/W: -, N/S: -, Elev: -\";\n\n  const gameCoords = canvasEventToGameCoords(event, map, canvas);\n  if (gameCoords === null) return \"E/W: -, N/S: -, Elev: -\";\n\n  const y = (await elevation(gameCoords)) ?? \"-\";\n  return `E/W: ${gameCoords.x.toString()}, N/S: ${gameCoords.z.toString()}, Elev: ${y.toString()}`;\n}\n\nexport function downloadCanvasPng(fileName: string, canvas: HTMLCanvasElement): void {\n  const a = document.createElement(\"a\");\n  a.download = fileName;\n  a.href = canvas.toDataURL(\"image/png\");\n  a.click();\n}\n\nexport async function sleep(msec: number): Promise<void> {\n  return new Promise((r) => setTimeout(r, msec));\n}\n\nexport function gameMapSize(s: { width: number; height: number }): GameMapSize {\n  return { type: \"game\", ...s };\n}\n\nexport function gameCoords(c: { x: number; z: number }): GameCoords {\n  return { type: \"game\", ...c };\n}\n\n/** Returns null if the event was fired out of the canvas */\nexport function canvasEventToGameCoords(event: EventOffsets, mapSize: GameMapSize, canvasSize: HTMLCanvasElement): GameCoords | null {\n  // in-game scale coords with left-top offset\n  const gx = (event.offsetX * mapSize.width) / canvasSize.width;\n  const gz = (event.offsetY * mapSize.height) / canvasSize.height;\n  if (gx < 0 || gx >= mapSize.width || gz < 0 || gz >= mapSize.height) {\n    return null;\n  }\n\n  // in-game coords (center offset)\n  const x = gx - Math.floor(mapSize.width / 2);\n  const z = Math.floor(mapSize.height / 2) - gz;\n  return gameCoords({ x: Math.round(x), z: Math.round(z) });\n}\n\nexport function threePlaneSize(width: number, height: number): ThreePlaneSize {\n  return { type: \"threePlane\", width, height };\n}\n\nexport function printError(e: unknown): void {\n  console.error(\"%o\", e);\n}\n\nexport async function fetchJson<T>(url: string): Promise<T> {\n  const r = await fetch(url);\n  if (!r.ok) throw Error(`Failed to fetch ${url}: ${r.statusText}`);\n  return (await r.json()) as T;\n}\n\nexport function basename(path: string) {\n  return path.substring(path.lastIndexOf(\"/\") + 1);\n}\n\nexport async function readWholeStream(stream: ReadableStream<Uint8Array>): Promise<Uint8Array> {\n  return new Uint8Array(await new Response(stream).arrayBuffer());\n}\n", "import { printError, waitAnimationFrame } from \"./utils\";\n\nexport class DelayedRenderer<T> {\n  #iterator: Iterator<T[]> = ([] as T[][])[Symbol.iterator]();\n  #appendee: HTMLElement;\n  #scrollableWrapper: HTMLElement;\n  #itemRenderer: (item: T) => Node;\n  #renderImmediatly: boolean;\n  #scrollCallback = (): void => {\n    this.renderAll().catch(printError);\n  };\n\n  constructor(scrollableWrapper: HTMLElement, appendee: HTMLElement, itemRenderer: (item: T) => Node, renderImmediatly = false) {\n    if (!scrollableWrapper.contains(appendee)) throw Error(\"Wrapper element should contain appendee element\");\n    appendee.innerHTML = \"\";\n    this.#appendee = appendee;\n    this.#scrollableWrapper = scrollableWrapper;\n    this.#itemRenderer = itemRenderer;\n    this.#renderImmediatly = renderImmediatly;\n  }\n\n  set iterator(iteratorOrIterable: Iterator<T> | Iterable<T>) {\n    if (\"next\" in iteratorOrIterable) {\n      this.#iterator = chunkIterator(iteratorOrIterable);\n    } else {\n      this.#iterator = chunkIterator(iteratorOrIterable[Symbol.iterator]());\n    }\n    this.#appendee.innerHTML = \"\";\n    this.#scrollableWrapper.removeEventListener(\"scroll\", this.#scrollCallback);\n\n    // Require a delay because flashing childlen like the above fires \"scroll\" events.\n    requestAnimationFrame(() => {\n      this.#scrollableWrapper.removeEventListener(\"scroll\", this.#scrollCallback);\n      if (this.#renderImmediatly) {\n        this.renderAll().catch(printError);\n      } else {\n        this.#scrollableWrapper.addEventListener(\"scroll\", this.#scrollCallback, { once: true });\n        // TODO Prevent double rendering iterations\n        this.#renderUntil(() => isFill(this.#scrollableWrapper)).catch(printError);\n      }\n    });\n  }\n\n  async renderAll(): Promise<void> {\n    await this.#renderUntil(() => false);\n  }\n\n  async #renderUntil(stopPredicate: () => boolean) {\n    do {\n      const result = this.#iterator.next();\n      if (isReturn(result)) break;\n      const df = new DocumentFragment();\n      result.value.forEach((i) => df.appendChild(this.#itemRenderer(i)));\n      this.#appendee.appendChild(df);\n      await waitAnimationFrame();\n    } while (!stopPredicate());\n  }\n}\n\nfunction isFill(wrapper: HTMLElement) {\n  return wrapper.clientHeight + 100 < wrapper.scrollHeight;\n}\n\nfunction chunkIterator<T, TReturn, TNext>(origin: Iterator<T, TReturn, TNext>, chunkSize = 10) {\n  let returnResult: IteratorReturnResult<TReturn> | null = null;\n  const chunkIter: Iterator<T[], TReturn, TNext> = {\n    next(...args: [] | [TNext]): IteratorResult<T[], TReturn> {\n      if (returnResult) return returnResult;\n      const chunk = Array<T>(chunkSize);\n      for (let i = 0; i < chunkSize; i++) {\n        const result = origin.next(...args);\n        if (isReturn(result)) {\n          returnResult = result;\n        } else {\n          chunk[i] = result.value;\n        }\n      }\n      return {\n        done: false,\n        value: chunk,\n      };\n    },\n  };\n  if (\"throw\" in origin) {\n    chunkIter.throw = (e?: unknown): IteratorResult<T[], TReturn> => {\n      const r = (origin.throw as (e?: unknown) => IteratorResult<T, TReturn>)(e);\n      if (isReturn(r)) return r;\n      else return { done: r.done ?? false, value: [r.value] };\n    };\n  }\n  if (\"return\" in origin) {\n    chunkIter.return = (treturn?: TReturn): IteratorResult<T[], TReturn> => {\n      const r = (origin.return as (treturn?: TReturn) => IteratorResult<T, TReturn>)(treturn);\n      if (isReturn(r)) return r;\n      else return { done: r.done ?? false, value: [r.value] };\n    };\n  }\n  return chunkIter;\n}\n\nfunction isReturn<T, TReturn>(r: IteratorResult<T, TReturn>): r is IteratorReturnResult<TReturn> {\n  return Boolean(r.done);\n}\n", "export class MultipleErrors extends Error {\n  #causes;\n  constructor(errors: unknown[]) {\n    super(\"Multiple errors occurred\");\n    this.#causes = errors;\n  }\n\n  get causes() {\n    return this.#causes;\n  }\n}\n", "import { printError } from \"./utils\";\nimport { MultipleErrors } from \"./errors\";\n\nexport type MessageMap<N extends string> = { [K in N]?: object };\nexport type Listener<N extends string, M extends MessageMap<N>> = (m: M) => unknown;\n\nexport class ListenerManager<N extends string, M extends MessageMap<N>> {\n  #listeners: Listener<N, M>[] = [];\n\n  addListener(listener: Listener<N, M>) {\n    this.#listeners.push(listener);\n  }\n\n  removeListener(listener: Listener<N, M>) {\n    const index = this.#listeners.indexOf(listener);\n    if (index >= 0) this.#listeners.splice(index, 1);\n  }\n\n  async dispatch(m: M) {\n    const results = await Promise.allSettled(this.#listeners.map((fn) => fn(m)));\n    const errors = results.flatMap((r) => (r.status === \"rejected\" ? [r.reason as unknown] : []));\n    if (errors.length === 1) throw errors[0];\n    if (errors.length > 1) throw new MultipleErrors(errors);\n  }\n\n  dispatchNoAwait(m: M) {\n    this.dispatch(m).catch(printError);\n  }\n}\n", "import { fetchJson } from \"./utils\";\n\nexport const LANGUAGES = [\n  \"english\",\n  \"german\",\n  \"spanish\",\n  \"french\",\n  \"italian\",\n  \"japanese\",\n  \"koreana\",\n  \"polish\",\n  \"brazilian\",\n  \"russian\",\n  \"turkish\",\n  \"schinese\",\n  \"tchinese\",\n] as const;\nexport type Language = (typeof LANGUAGES)[number];\n\nconst LANGUAGE_TAGS: { [tag: string]: Language } = {\n  en: \"english\",\n  de: \"german\",\n  es: \"spanish\",\n  fr: \"french\",\n  it: \"italian\",\n  ja: \"japanese\",\n  ko: \"koreana\",\n  pl: \"polish\",\n  pt: \"brazilian\",\n  ru: \"russian\",\n  tr: \"turkish\",\n  \"zh-CN\": \"schinese\",\n  \"zh-TW\": \"tchinese\",\n};\n\nconst FILE_BASE_NAMES = [\"blocks\", \"prefabs\", \"shapes\"] as const;\ntype FileBaseName = (typeof FILE_BASE_NAMES)[number];\n\nexport class LabelHolder {\n  static DEFAULT_LANGUAGE: Language = \"english\";\n\n  #baseUrl: string;\n  #language: Language;\n  #fallbacks: Map<FileBaseName, Promise<Map<string, string>>>;\n  #labels: Map<FileBaseName, Promise<Labels>>;\n\n  constructor(baseUrl: string, navigatorLanguages: readonly string[]) {\n    this.#baseUrl = baseUrl;\n    this.#language = resolveLanguage(navigatorLanguages);\n    this.#fallbacks = new Map(FILE_BASE_NAMES.map((n) => [n, this.#fetchLabelMap(LabelHolder.DEFAULT_LANGUAGE, n)] as const));\n    this.#labels = this.#buildAllLabels();\n  }\n\n  get(fileId: FileBaseName): Promise<Labels> {\n    const labels = this.#labels.get(fileId);\n    if (!labels) throw new Error(`No labels for ${this.#language}/${fileId}`);\n    return labels;\n  }\n\n  set language(lang: Language) {\n    if (lang === this.#language) return;\n    console.log(\"LabelHolder set language: %s -> %s\", this.#language, lang);\n    this.#language = lang;\n    this.#labels = this.#buildAllLabels();\n  }\n\n  #buildAllLabels(): Map<FileBaseName, Promise<Labels>> {\n    return new Map(FILE_BASE_NAMES.map((n) => [n, this.#buildLabels(n)]));\n  }\n\n  async #buildLabels(fileBaseName: FileBaseName): Promise<Labels> {\n    const fallback = this.#fallbacks.get(fileBaseName);\n    if (!fallback) throw new Error(`No fallback for ${this.#language}/${fileBaseName}`);\n    return new Labels(await this.#fetchLabelMap(this.#language, fileBaseName), await fallback);\n  }\n\n  async #fetchLabelMap(language: Language, fileId: FileBaseName): Promise<Map<string, string>> {\n    return new Map(Object.entries(await fetchJson(`${this.#baseUrl}/${language}/${fileId}.json`)));\n  }\n}\n\nexport class Labels {\n  #labels: Map<string, string>;\n  #fallback: Map<string, string>;\n\n  constructor(labels: Map<string, string>, defaultLabels: Map<string, string>) {\n    this.#labels = labels;\n    this.#fallback = defaultLabels;\n  }\n\n  get(key: string): string | undefined {\n    return this.#labels.get(key) ?? this.#fallback.get(key);\n  }\n}\n\nexport function resolveLanguage(languages: readonly string[]): Language {\n  for (const clientTag of languages) {\n    for (const [tag, lang] of Object.entries(LANGUAGE_TAGS)) {\n      if (clientTag.startsWith(tag)) return lang;\n    }\n  }\n  return LabelHolder.DEFAULT_LANGUAGE;\n}\n", "import { LANGUAGES, LabelHolder, Language, resolveLanguage } from \"./labels\";\nimport * as events from \"./events\";\n\ninterface Doms {\n  language: HTMLSelectElement;\n}\n\ninterface EventMessage {\n  update: { lang: Language };\n}\n\nexport class LabelHandler {\n  #doms: Doms;\n  #listener = new events.ListenerManager<\"update\", EventMessage>();\n  #holder: LabelHolder;\n\n  constructor(doms: Doms, labelsBaseUrl: string, navigatorLanguages: readonly string[]) {\n    this.#doms = doms;\n    this.#holder = new LabelHolder(labelsBaseUrl, navigatorLanguages);\n    this.#buildSelectOptions(navigatorLanguages);\n    this.#doms.language.addEventListener(\"change\", () => {\n      const lang = this.#doms.language.value as Language;\n      if (lang === localStorage.getItem(\"language\")) return;\n      localStorage.setItem(\"language\", lang);\n      this.holder.language = lang;\n      this.#listener.dispatchNoAwait({ update: { lang } });\n    });\n  }\n\n  #buildSelectOptions(navigatorLanguages: readonly string[]) {\n    const existingLangs = new Set(Array.from(this.#doms.language.options).map((o) => o.value));\n    for (const lang of LANGUAGES) {\n      if (existingLangs.has(lang)) continue;\n      const option = document.createElement(\"option\");\n      option.textContent = lang;\n      this.#doms.language.appendChild(option);\n    }\n\n    const browserLang = localStorage.getItem(\"language\") ?? resolveLanguage(navigatorLanguages);\n    if (this.#doms.language.value !== browserLang) {\n      this.#doms.language.value = browserLang;\n      requestAnimationFrame(() => this.#doms.language.dispatchEvent(new Event(\"change\")));\n    }\n  }\n\n  addListener(fn: (m: EventMessage) => void | Promise<void>) {\n    this.#listener.addListener(fn);\n  }\n\n  get language(): Language {\n    return this.#doms.language.value as Language;\n  }\n\n  get holder(): LabelHolder {\n    return this.#holder;\n  }\n}\n", "// Sync values between two inputs, one for max and one for min.\n\nexport function init() {\n  for (const eventName of [\"input\", \"change\"]) {\n    window.addEventListener(eventName, ({ target }) => {\n      if (!(target instanceof HTMLInputElement)) return;\n      updateMinMax(target);\n    });\n  }\n\n  for (const input of [\n    ...document.querySelectorAll<HTMLInputElement>(\"input[data-max]\"),\n    ...document.querySelectorAll<HTMLInputElement>(\"input[data-min]\"),\n  ]) {\n    updateMinMax(input);\n  }\n}\n\nfunction updateMinMax(target: HTMLInputElement) {\n  if (target.dataset[\"min\"]) updateMaxValues(target, target.dataset[\"min\"]);\n  if (target.dataset[\"max\"]) updateMinValues(target, target.dataset[\"max\"]);\n}\n\nfunction updateMaxValues(target: HTMLInputElement, minMaxId: string) {\n  const maxInputs = document.querySelectorAll<HTMLInputElement>(`input[data-max=\"${minMaxId}\"]`);\n  for (const maxInput of maxInputs) {\n    if (maxInput.valueAsNumber < target.valueAsNumber) {\n      const oldValue = maxInput.value;\n      maxInput.value = target.value;\n      if (oldValue !== maxInput.value) dispatchInputEvent(maxInput);\n    }\n  }\n}\n\nfunction updateMinValues(target: HTMLInputElement, minMaxId: string) {\n  const minInputs = document.querySelectorAll<HTMLInputElement>(`input[data-min=\"${minMaxId}\"]`);\n  for (const minInput of minInputs) {\n    if (minInput.valueAsNumber > target.valueAsNumber) {\n      const oldValue = minInput.value;\n      minInput.value = target.value;\n      if (oldValue !== minInput.value) dispatchInputEvent(minInput);\n    }\n  }\n}\n\nfunction dispatchInputEvent(input: HTMLInputElement) {\n  for (const eventName of [\"input\", \"change\"]) input.dispatchEvent(new Event(eventName, { bubbles: true }));\n}\n", "import { component, requireNonnull } from \"../utils\";\n\nexport function init(): void {\n  document.body.addEventListener(\"click\", ({ target }) => {\n    if (target instanceof HTMLButtonElement && target.dataset[\"inputFor\"] != null) {\n      const input = component(target.dataset[\"inputFor\"], HTMLInputElement);\n      input.value = requireNonnull(target.dataset[\"inputText\"] ?? target.textContent);\n      input.dispatchEvent(new Event(\"input\", { bubbles: true }));\n    }\n  });\n}\n", "import { component } from \"../utils\";\n\nexport function init(): void {\n  for (const eventName of [\"input\", \"change\"]) {\n    window.addEventListener(eventName, ({ target }) => {\n      if (!(target instanceof HTMLInputElement) || !(target instanceof HTMLTextAreaElement || !(target instanceof HTMLSelectElement)))\n        return;\n      const outputElements = document.querySelectorAll<HTMLOutputElement>(`output[data-sync-for=\"${target.id}\"]`);\n      for (const output of outputElements) {\n        output.value = target.value;\n      }\n    });\n  }\n\n  for (const output of document.querySelectorAll<HTMLOutputElement>(\"output[data-sync-for]\")) {\n    const input = component(output.dataset[\"syncFor\"], HTMLInputElement);\n    output.value = input.value;\n  }\n}\n", "interface StateElement {\n  defaultValue: string;\n  element: HTMLInputElement;\n}\n\n// Store values of input elements in the URL query string.\nexport class UrlState {\n  private url: URL;\n  private inputs: Map<HTMLInputElement, StateElement>;\n  private udpateListeners: ((url: URL) => void)[] = [];\n\n  private constructor(browserUrl: URL, elements: ArrayLike<StateElement>) {\n    this.url = browserUrl;\n    this.inputs = new Map(Array.from(elements).map((e) => [e.element, e]));\n    this.init();\n  }\n\n  private init() {\n    for (const [input, { defaultValue }] of this.inputs.entries()) {\n      if (this.url.searchParams.has(input.id)) {\n        setValue(input, this.url.searchParams.get(input.id) ?? defaultValue);\n        input.dispatchEvent(new Event(\"input\"));\n      }\n\n      input.addEventListener(\"input\", () => {\n        this.updateUrl(input, defaultValue);\n        this.udpateListeners.forEach((fn) => {\n          fn(this.url);\n        });\n      });\n    }\n  }\n\n  static create(location: Location, elements: ArrayLike<HTMLInputElement>): UrlState {\n    return new UrlState(\n      new URL(location.href),\n      Array.from(elements).map((e) => ({ defaultValue: getValue(e), element: e })),\n    );\n  }\n\n  private updateUrl(input: HTMLInputElement, defaultValue: string) {\n    const value = getValue(input);\n    if (value === defaultValue) {\n      this.url.searchParams.delete(input.id);\n    } else {\n      this.url.searchParams.set(input.id, value);\n    }\n  }\n\n  addUpdateListener(listener: (url: URL) => void) {\n    this.udpateListeners.push(listener);\n  }\n}\n\nfunction getValue(input: HTMLInputElement): string {\n  switch (input.type) {\n    case \"checkbox\":\n      return input.checked ? \"t\" : \"\";\n    default:\n      return input.value;\n  }\n}\n\nfunction setValue(input: HTMLInputElement, value: string) {\n  switch (input.type) {\n    case \"checkbox\":\n      input.checked = value === \"t\";\n      break;\n    default:\n      input.value = value;\n  }\n}\n", "import type * as prefabsFilter from \"./worker/prefabs-filter\";\n\nimport { DelayedRenderer } from \"./lib/delayed-renderer\";\nimport * as events from \"./lib/events\";\nimport { LabelHandler } from \"./lib/label-handler\";\nimport * as minMaxInputs from \"./lib/ui/min-max-inputs\";\nimport * as presetButton from \"./lib/ui/preset-button\";\nimport * as syncOutput from \"./lib/ui/sync-output\";\nimport { UrlState } from \"./lib/url-state\";\nimport { component, fetchJson, printError } from \"./lib/utils\";\n\ninterface HighlightedPrefab {\n  name: string;\n  difficulty?: number;\n  highlightedName?: string;\n  highlightedLabel?: string;\n  matchedBlocks?: HighlightedBlock[];\n}\n\nfunction main() {\n  presetButton.init();\n  syncOutput.init();\n  minMaxInputs.init();\n\n  const urlState = UrlState.create(location, document.querySelectorAll(\"input\"));\n  urlState.addUpdateListener((url) => {\n    window.history.replaceState(null, \"\", url.toString());\n  });\n\n  const prefabsHandler = new PrefabsHandler(\n    {\n      prefabFilter: component(\"prefab-filter\", HTMLInputElement),\n      blockFilter: component(\"block-filter\", HTMLInputElement),\n      minTier: component(\"min-tier\", HTMLInputElement),\n      maxTier: component(\"max-tier\", HTMLInputElement),\n      excludes: Array.from(component(\"prefab-excludes\").querySelectorAll(\"input[type=checkbox]\")),\n    },\n    new Worker(\"worker/prefabs-filter.js\"),\n    new LabelHandler({ language: component(\"label-lang\", HTMLSelectElement) }, \"labels\", navigator.languages),\n    async () => {\n      const [prefabBlockCounts, difficulties] = await Promise.all([\n        fetchJson<PrefabBlockCounts>(\"prefab-block-counts.json\"),\n        fetchJson<PrefabDifficulties>(\"prefab-difficulties.json\"),\n      ]);\n      return Object.keys(prefabBlockCounts).map((n) => ({\n        name: n,\n        x: 0,\n        z: 0,\n        difficulty: difficulties[n] ?? 0,\n      }));\n    },\n  );\n\n  const minTier = component(\"min-tier\", HTMLInputElement);\n  const maxTier = component(\"max-tier\", HTMLInputElement);\n  const tierClear = component(\"tier-clear\", HTMLButtonElement);\n  tierClear.addEventListener(\"click\", () => {\n    minTier.value = minTier.defaultValue;\n    maxTier.value = maxTier.defaultValue;\n    minTier.dispatchEvent(new Event(\"input\"));\n    maxTier.dispatchEvent(new Event(\"input\"));\n  });\n\n  const status = component(\"prefabs-status\");\n  const prefabListRenderer = new DelayedRenderer<HighlightedPrefab>(\n    document.documentElement,\n    component(\"prefabs-list\"),\n    (p) => prefabLi(p),\n    true,\n  );\n  prefabsHandler.addListener(({ update }) => {\n    status.textContent = update.status;\n    prefabListRenderer.iterator = update.prefabs;\n  });\n\n  // Workaround that document.documentElement never fires \"scroll\" event\n  document.addEventListener(\"scroll\", () => {\n    document.documentElement.dispatchEvent(new Event(\"scroll\"));\n  });\n\n  // init\n\n  prefabsHandler.init().catch(printError);\n}\n\nfunction prefabLi(prefab: HighlightedPrefab) {\n  const li = document.createElement(\"li\");\n  li.innerHTML = [\n    ...(prefab.difficulty\n      ? [\n          `<span title=\"Difficulty Tier ${prefab.difficulty.toString()}\" class=\"prefab-difficulty-${prefab.difficulty.toString()}\">`,\n          `  \uD83D\uDC80${prefab.difficulty.toString()}`,\n          `</span>`,\n        ]\n      : []),\n    `<a href=\"prefabs/${prefab.name}.html\" target=\"_blank\">`,\n    prefab.highlightedLabel ?? \"-\",\n    \"/\",\n    `<small>${prefab.highlightedName ?? prefab.name}</small></a>`,\n    ...(prefab.matchedBlocks && prefab.matchedBlocks.length > 0 ? [\"has\", countHighlightedBlocks(prefab.matchedBlocks), \"blocks\"] : []),\n  ].join(\" \");\n  if (prefab.matchedBlocks && prefab.matchedBlocks.length > 0) {\n    const blocksUl = document.createElement(\"ul\");\n    prefab.matchedBlocks.forEach((block) => {\n      if (block.count === undefined) return;\n      const blockLi = document.createElement(\"li\");\n      blockLi.innerHTML = [\n        `<button data-input-for=\"blocks-filter\" data-input-text=\"${block.name}\" title=\"Filter with this block name\">\u25B2</button>`,\n        `${block.count.toString()}x`,\n        block.highlightedLabel,\n        `<small>${block.highlightedName}</small>`,\n      ].join(\" \");\n      blocksUl.appendChild(blockLi);\n    });\n    li.appendChild(blocksUl);\n  }\n  return li;\n}\n\nfunction countHighlightedBlocks(blocks: HighlightedBlock[]): number {\n  return blocks.reduce((acc, b) => acc + (b.count ?? 0), 0);\n}\n\ndeclare class PrefabsFilterWorker extends Worker {\n  postMessage(message: prefabsFilter.InMessage): void;\n}\n\ntype PrefabsHandlerEventMessage = prefabsFilter.OutMessage;\n\ninterface PrefabsHandlerDoms {\n  prefabFilter: HTMLInputElement;\n  blockFilter: HTMLInputElement;\n  minTier: HTMLInputElement;\n  maxTier: HTMLInputElement;\n  excludes: HTMLInputElement[];\n}\n\nclass PrefabsHandler {\n  #doms: PrefabsHandlerDoms;\n  #worker: PrefabsFilterWorker;\n  #labelHandler: LabelHandler;\n  #fetchPrefabs: () => Promise<Prefab[]>;\n  #listeners = new events.ListenerManager<\"update\", PrefabsHandlerEventMessage>();\n\n  constructor(doms: PrefabsHandlerDoms, worker: PrefabsFilterWorker, labelHandler: LabelHandler, fetchPrefabs: () => Promise<Prefab[]>) {\n    this.#doms = doms;\n    this.#worker = worker;\n    this.#labelHandler = labelHandler;\n    this.#fetchPrefabs = fetchPrefabs;\n\n    doms.prefabFilter.addEventListener(\"input\", () => {\n      worker.postMessage({ prefabFilterRegexp: doms.prefabFilter.value });\n    });\n    doms.blockFilter.addEventListener(\"input\", () => {\n      worker.postMessage({ blockFilterRegexp: doms.blockFilter.value });\n    });\n    const tierRange = { start: doms.minTier.valueAsNumber, end: doms.maxTier.valueAsNumber };\n    doms.minTier.addEventListener(\"input\", () => {\n      const newMinTier = doms.minTier.valueAsNumber;\n      if (newMinTier === tierRange.start) return;\n      tierRange.start = newMinTier;\n      this.#worker.postMessage({ difficulty: tierRange });\n    });\n    doms.maxTier.addEventListener(\"input\", () => {\n      const newMaxTier = doms.maxTier.valueAsNumber;\n      if (newMaxTier === tierRange.end) return;\n      tierRange.end = newMaxTier;\n      this.#worker.postMessage({ difficulty: tierRange });\n    });\n    doms.excludes.forEach((e) => {\n      e.addEventListener(\"change\", () => {\n        worker.postMessage({ preExcludes: this.#excludes });\n      });\n    });\n\n    worker.addEventListener(\"message\", (event: MessageEvent<prefabsFilter.OutMessage>) => {\n      this.#listeners.dispatchNoAwait(event.data);\n    });\n    labelHandler.addListener(({ update: { lang } }) => {\n      worker.postMessage({ language: lang });\n    });\n  }\n\n  get #excludes(): string[] {\n    return this.#doms.excludes.flatMap((e) => (e.checked ? [e.value] : []));\n  }\n\n  get #tierRange(): { start: number; end: number } {\n    return { start: this.#doms.minTier.valueAsNumber, end: this.#doms.maxTier.valueAsNumber };\n  }\n\n  addListener(fn: (m: PrefabsHandlerEventMessage) => unknown) {\n    this.#listeners.addListener(fn);\n  }\n\n  async init() {\n    this.#worker.postMessage({\n      prefabFilterRegexp: this.#doms.prefabFilter.value,\n      blockFilterRegexp: this.#doms.blockFilter.value,\n      difficulty: this.#tierRange,\n      preExcludes: this.#excludes,\n      language: this.#labelHandler.language,\n      all: await this.#fetchPrefabs(),\n    });\n  }\n}\n\nif (document.readyState === \"loading\") {\n  document.addEventListener(\"DOMContentLoaded\", main);\n} else {\n  main();\n}\n"],
  "mappings": "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",
  "names": ["requireNonnull", "errorMessage", "requireType", "o", "t", "errorMessage", "component", "id", "i", "requireNonnull", "e", "waitAnimationFrame", "r", "printError", "e", "fetchJson", "url", "r", "DelayedRenderer", "#iterator", "#appendee", "#scrollableWrapper", "#itemRenderer", "#renderImmediatly", "#scrollCallback", "printError", "scrollableWrapper", "appendee", "itemRenderer", "renderImmediatly", "iteratorOrIterable", "chunkIterator", "#renderUntil", "isFill", "stopPredicate", "result", "isReturn", "df", "i", "waitAnimationFrame", "wrapper", "origin", "chunkSize", "returnResult", "chunkIter", "args", "chunk", "e", "r", "treturn", "MultipleErrors", "#causes", "errors", "ListenerManager", "#listeners", "listener", "index", "m", "errors", "fn", "r", "MultipleErrors", "printError", "LANGUAGES", "LANGUAGE_TAGS", "FILE_BASE_NAMES", "LabelHolder", "_LabelHolder", "#baseUrl", "#language", "#fallbacks", "#labels", "baseUrl", "navigatorLanguages", "resolveLanguage", "n", "#fetchLabelMap", "#buildAllLabels", "fileId", "labels", "lang", "#buildLabels", "fileBaseName", "fallback", "Labels", "language", "fetchJson", "#fallback", "defaultLabels", "key", "languages", "clientTag", "tag", "LabelHandler", "#doms", "#listener", "ListenerManager", "#holder", "doms", "labelsBaseUrl", "navigatorLanguages", "LabelHolder", "#buildSelectOptions", "lang", "existingLangs", "o", "LANGUAGES", "option", "browserLang", "resolveLanguage", "fn", "init", "eventName", "target", "updateMinMax", "input", "updateMaxValues", "updateMinValues", "minMaxId", "maxInputs", "maxInput", "oldValue", "dispatchInputEvent", "minInputs", "minInput", "init", "target", "input", "component", "requireNonnull", "init", "eventName", "target", "outputElements", "output", "input", "component", "UrlState", "_UrlState", "browserUrl", "elements", "e", "input", "defaultValue", "setValue", "fn", "location", "getValue", "value", "listener", "main", "init", "UrlState", "url", "prefabsHandler", "PrefabsHandler", "component", "LabelHandler", "prefabBlockCounts", "difficulties", "fetchJson", "n", "minTier", "maxTier", "status", "prefabListRenderer", "DelayedRenderer", "p", "prefabLi", "update", "printError", "prefab", "li", "countHighlightedBlocks", "blocksUl", "block", "blockLi", "blocks", "acc", "b", "#doms", "#worker", "#labelHandler", "#fetchPrefabs", "#listeners", "ListenerManager", "doms", "worker", "labelHandler", "fetchPrefabs", "tierRange", "newMinTier", "newMaxTier", "e", "#excludes", "event", "lang", "#tierRange", "fn"]
}
