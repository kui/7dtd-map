{
  "version": 3,
  "sources": ["../src/lib/utils.ts", "../src/lib/ui/preset-button.ts", "../src/lib/ui/sync-output.ts", "../src/lib/ui/min-max-inputs.ts", "../src/lib/delayed-renderer.ts", "../src/lib/labels.ts", "../src/lib/label-handler.ts", "../src/lib/url-state.ts", "../src/prefabs.ts"],
  "sourcesContent": ["export function requireNonnull<T>(t: T | undefined | null, errorMessage = () => `Unexpected state: ${String(t)}`): T {\n  if (t == null) throw Error(errorMessage());\n  return t;\n}\n\nexport function strictParseInt(s: string | undefined | null, errorMessage = () => `Unexpected argument: ${String(s)}`): number {\n  const n = parseInt(s ?? \"\");\n  if (isNaN(n)) throw Error(errorMessage());\n  return n;\n}\n\nexport function requireType<T>(\n  o: unknown,\n  t: new (...a: unknown[]) => T,\n  errorMessage = () => `Unexpected type: expected as ${String(t)}, but actual type ${String(o)}`,\n): T {\n  if (o instanceof t) return o;\n  throw Error(errorMessage());\n}\n\nexport function component<T extends HTMLElement = HTMLElement>(id: string | undefined | null, t?: new (...a: unknown[]) => T): T {\n  const i = requireNonnull(id, () => \"Unexpected argument: id is null\");\n  const e = requireNonnull(document.getElementById(i), () => `Element not found: #${i}`);\n  return t ? requireType(e, t) : (e as T);\n}\n\nexport function removeAllChildren(e: HTMLElement): void {\n  while (e.lastChild) e.removeChild(e.lastChild);\n}\n\nexport function humanreadableDistance(d: number): string {\n  if (d < 1000) {\n    return `${d.toString()}m`;\n  }\n  return `${(d / 1000).toFixed(2)}km`;\n}\n\nexport function waitAnimationFrame(): Promise<number> {\n  return new Promise((r) => requestAnimationFrame(r));\n}\n\ninterface EventOffsets {\n  offsetX: number;\n  offsetY: number;\n}\n\nexport async function formatCoords(\n  map: GameMapSize | null,\n  canvas: HTMLCanvasElement,\n  elevation: (coods: GameCoords) => Promise<number | null>,\n  event: EventOffsets | null,\n): Promise<string> {\n  if (!event || !map) return \"E/W: -, N/S: -, Elev: -\";\n\n  const gameCoords = canvasEventToGameCoords(event, map, canvas);\n  if (gameCoords === null) return \"E/W: -, N/S: -, Elev: -\";\n\n  const y = (await elevation(gameCoords)) ?? \"-\";\n  return `E/W: ${gameCoords.x.toString()}, N/S: ${gameCoords.z.toString()}, Elev: ${y.toString()}`;\n}\n\nexport function downloadCanvasPng(fileName: string, canvas: HTMLCanvasElement): void {\n  const a = document.createElement(\"a\");\n  a.download = fileName;\n  a.href = canvas.toDataURL(\"image/png\");\n  a.click();\n}\n\nexport async function sleep(msec: number): Promise<void> {\n  return new Promise((r) => setTimeout(r, msec));\n}\n\nexport function gameMapSize(s: { width: number; height: number }): GameMapSize {\n  return { type: \"game\", ...s };\n}\n\nexport function gameCoords(c: { x: number; z: number }): GameCoords {\n  return { type: \"game\", ...c };\n}\n\n/** Returns null if the event was fired out of the canvas */\nexport function canvasEventToGameCoords(event: EventOffsets, mapSize: GameMapSize, canvasSize: HTMLCanvasElement): GameCoords | null {\n  // in-game scale coords with left-top offset\n  const gx = (event.offsetX * mapSize.width) / canvasSize.width;\n  const gz = (event.offsetY * mapSize.height) / canvasSize.height;\n  if (gx < 0 || gx >= mapSize.width || gz < 0 || gz >= mapSize.height) {\n    return null;\n  }\n\n  // in-game coords (center offset)\n  const x = gx - Math.floor(mapSize.width / 2);\n  const z = Math.floor(mapSize.height / 2) - gz;\n  return gameCoords({ x: Math.round(x), z: Math.round(z) });\n}\n\nexport function threePlaneSize(width: number, height: number): ThreePlaneSize {\n  return { type: \"threePlane\", width, height };\n}\n\nexport function printError(e: unknown): void {\n  console.error(e);\n}\n\nexport async function fetchJson<T>(url: string): Promise<T> {\n  const r = await fetch(url);\n  if (!r.ok) throw Error(`Failed to fetch ${url}: ${r.statusText}`);\n  return (await r.json()) as T;\n}\n\nexport function basename(path: string) {\n  return path.substring(path.lastIndexOf(\"/\") + 1);\n}\n\nexport async function readWholeStream(stream: ReadableStream<Uint8Array>): Promise<Uint8Array> {\n  return new Uint8Array(await new Response(stream).arrayBuffer());\n}\n", "import { component, requireNonnull } from \"../utils\";\n\nexport function init(): void {\n  document.body.addEventListener(\"click\", ({ target }) => {\n    if (target instanceof HTMLButtonElement && target.dataset[\"inputFor\"] != null) {\n      const input = component(target.dataset[\"inputFor\"], HTMLInputElement);\n      input.value = requireNonnull(target.dataset[\"inputText\"] ?? target.textContent);\n      input.dispatchEvent(new Event(\"input\", { bubbles: true }));\n    }\n  });\n}\n", "import { component } from \"../utils\";\n\nexport function init(): void {\n  for (const eventName of [\"input\", \"change\"]) {\n    window.addEventListener(eventName, ({ target }) => {\n      if (!(target instanceof HTMLInputElement) || !(target instanceof HTMLTextAreaElement || !(target instanceof HTMLSelectElement)))\n        return;\n      const outputElements = document.querySelectorAll<HTMLOutputElement>(`output[data-sync-for=\"${target.id}\"]`);\n      for (const output of outputElements) {\n        output.value = target.value;\n      }\n    });\n  }\n\n  for (const output of document.querySelectorAll<HTMLOutputElement>(\"output[data-sync-for]\")) {\n    const input = component(output.dataset[\"syncFor\"], HTMLInputElement);\n    output.value = input.value;\n  }\n}\n", "// Sync values between two inputs, one for max and one for min.\n\nexport function init() {\n  for (const eventName of [\"input\", \"change\"]) {\n    window.addEventListener(eventName, ({ target }) => {\n      if (!(target instanceof HTMLInputElement)) return;\n      updateMinMax(target);\n    });\n  }\n\n  for (const input of [\n    ...document.querySelectorAll<HTMLInputElement>(\"input[data-max]\"),\n    ...document.querySelectorAll<HTMLInputElement>(\"input[data-min]\"),\n  ]) {\n    updateMinMax(input);\n  }\n}\n\nfunction updateMinMax(target: HTMLInputElement) {\n  if (target.dataset[\"min\"]) updateMaxValues(target, target.dataset[\"min\"]);\n  if (target.dataset[\"max\"]) updateMinValues(target, target.dataset[\"max\"]);\n}\n\nfunction updateMaxValues(target: HTMLInputElement, minMaxId: string) {\n  const maxInputs = document.querySelectorAll<HTMLInputElement>(`input[data-max=\"${minMaxId}\"]`);\n  for (const maxInput of maxInputs) {\n    if (maxInput.valueAsNumber < target.valueAsNumber) {\n      const oldValue = maxInput.value;\n      maxInput.value = target.value;\n      if (oldValue !== maxInput.value) dispatchInputEvent(maxInput);\n    }\n  }\n}\n\nfunction updateMinValues(target: HTMLInputElement, minMaxId: string) {\n  const minInputs = document.querySelectorAll<HTMLInputElement>(`input[data-min=\"${minMaxId}\"]`);\n  for (const minInput of minInputs) {\n    if (minInput.valueAsNumber > target.valueAsNumber) {\n      const oldValue = minInput.value;\n      minInput.value = target.value;\n      if (oldValue !== minInput.value) dispatchInputEvent(minInput);\n    }\n  }\n}\n\nfunction dispatchInputEvent(input: HTMLInputElement) {\n  for (const eventName of [\"input\", \"change\"]) input.dispatchEvent(new Event(eventName, { bubbles: true }));\n}\n", "import { printError, waitAnimationFrame } from \"./utils\";\n\nexport class DelayedRenderer<T> {\n  _iterator: Iterator<T[]> = ([] as T[][])[Symbol.iterator]();\n  appendee: HTMLElement;\n  scrollableWrapper: HTMLElement;\n  itemRenderer: (item: T) => Node;\n  scrollCallback = (): void => {\n    this.renderAll().catch(printError);\n  };\n\n  constructor(scrollableWrapper: HTMLElement, appendee: HTMLElement, itemRenderer: (item: T) => Node) {\n    if (!scrollableWrapper.contains(appendee)) throw Error(\"Wrapper element should contain appendee element\");\n    appendee.innerHTML = \"\";\n    this.appendee = appendee;\n    this.scrollableWrapper = scrollableWrapper;\n    this.itemRenderer = itemRenderer;\n  }\n\n  set iterator(iteratorOrIterable: Iterator<T> | Iterable<T>) {\n    if (\"next\" in iteratorOrIterable) {\n      this._iterator = chunkIterator(iteratorOrIterable);\n    } else {\n      this._iterator = chunkIterator(iteratorOrIterable[Symbol.iterator]());\n    }\n    this.appendee.innerHTML = \"\";\n    this.scrollableWrapper.removeEventListener(\"scroll\", this.scrollCallback);\n\n    // Require a delay because flashing childlen like the above fires \"scroll\" events.\n    requestAnimationFrame(() => {\n      this.scrollableWrapper.removeEventListener(\"scroll\", this.scrollCallback);\n      this.scrollableWrapper.addEventListener(\"scroll\", this.scrollCallback, { once: true });\n      // TODO Prevent double rendering iterations\n      renderUntil(this, () => isFill(this.scrollableWrapper)).catch(printError);\n    });\n  }\n\n  async renderAll(): Promise<void> {\n    await renderUntil(this, () => false);\n  }\n}\n\nasync function renderUntil<T>(self: DelayedRenderer<T>, stopPredicate: () => boolean) {\n  do {\n    const result = self._iterator.next();\n    if (isReturn(result)) break;\n    const df = new DocumentFragment();\n    result.value.forEach((i) => df.appendChild(self.itemRenderer(i)));\n    self.appendee.appendChild(df);\n    await waitAnimationFrame();\n  } while (!stopPredicate());\n}\n\nfunction isFill(wrapper: HTMLElement) {\n  return wrapper.clientHeight + 100 < wrapper.scrollHeight;\n}\n\nfunction chunkIterator<T, TReturn, TNext>(origin: Iterator<T, TReturn, TNext>, chunkSize = 10) {\n  let returnResult: IteratorReturnResult<TReturn> | null = null;\n  const chunkIter: Iterator<T[], TReturn, TNext> = {\n    next(...args: [] | [TNext]): IteratorResult<T[], TReturn> {\n      if (returnResult) return returnResult;\n      const chunk = Array<T>(chunkSize);\n      for (let i = 0; i < chunkSize; i++) {\n        const result = origin.next(...args);\n        if (isReturn(result)) {\n          returnResult = result;\n        } else {\n          chunk[i] = result.value;\n        }\n      }\n      return {\n        done: false,\n        value: chunk,\n      };\n    },\n  };\n  if (\"throw\" in origin) {\n    chunkIter.throw = (e?: unknown): IteratorResult<T[], TReturn> => {\n      const r = (origin.throw as (e?: unknown) => IteratorResult<T, TReturn>)(e);\n      if (isReturn(r)) return r;\n      else return { done: r.done ?? false, value: [r.value] };\n    };\n  }\n  if (\"return\" in origin) {\n    chunkIter.return = (treturn?: TReturn): IteratorResult<T[], TReturn> => {\n      const r = (origin.return as (treturn?: TReturn | undefined) => IteratorResult<T, TReturn>)(treturn);\n      if (isReturn(r)) return r;\n      else return { done: r.done ?? false, value: [r.value] };\n    };\n  }\n  return chunkIter;\n}\n\nfunction isReturn<T, TReturn>(r: IteratorResult<T, TReturn>): r is IteratorReturnResult<TReturn> {\n  return Boolean(r.done);\n}\n", "import { fetchJson } from \"./utils\";\n\nexport const LANGUAGES = [\n  \"english\",\n  \"german\",\n  \"spanish\",\n  \"french\",\n  \"italian\",\n  \"japanese\",\n  \"koreana\",\n  \"polish\",\n  \"brazilian\",\n  \"russian\",\n  \"turkish\",\n  \"schinese\",\n  \"tchinese\",\n] as const;\nexport type Language = (typeof LANGUAGES)[number];\n\nconst LANGUAGE_TAGS: { [tag: string]: Language } = {\n  en: \"english\",\n  de: \"german\",\n  es: \"spanish\",\n  fr: \"french\",\n  it: \"italian\",\n  ja: \"japanese\",\n  ko: \"koreana\",\n  pl: \"polish\",\n  pt: \"brazilian\",\n  ru: \"russian\",\n  tr: \"turkish\",\n  \"zh-CN\": \"schinese\",\n  \"zh-TW\": \"tchinese\",\n};\n\nconst FILE_BASE_NAMES = [\"blocks\", \"prefabs\", \"shapes\"] as const;\ntype FileBaseName = (typeof FILE_BASE_NAMES)[number];\n\nexport class LabelHolder {\n  static DEFAULT_LANGUAGE: Language = \"english\";\n\n  #baseUrl: string;\n  #language: Language;\n  #fallbacks: Map<FileBaseName, Promise<Map<string, string>>>;\n  #labels: Map<FileBaseName, Promise<Labels>>;\n\n  constructor(baseUrl: string, navigatorLanguages: readonly string[]) {\n    this.#baseUrl = baseUrl;\n    this.#language = resolveLanguage(navigatorLanguages);\n    this.#fallbacks = new Map(FILE_BASE_NAMES.map((n) => [n, this.#fetchLabelMap(LabelHolder.DEFAULT_LANGUAGE, n)] as const));\n    this.#labels = this.#buildAllLabels();\n  }\n\n  get(fileId: FileBaseName): Promise<Labels> {\n    const labels = this.#labels.get(fileId);\n    if (!labels) throw new Error(`No labels for ${this.#language}/${fileId}`);\n    return labels;\n  }\n\n  set language(lang: Language) {\n    if (lang === this.#language) return;\n    console.log(\"LabelHolder set language: %s -> %s\", this.#language, lang);\n    this.#language = lang;\n    this.#labels = this.#buildAllLabels();\n  }\n\n  #buildAllLabels(): Map<FileBaseName, Promise<Labels>> {\n    return new Map(FILE_BASE_NAMES.map((n) => [n, this.#buildLabels(n)]));\n  }\n\n  async #buildLabels(fileBaseName: FileBaseName): Promise<Labels> {\n    const fallback = this.#fallbacks.get(fileBaseName);\n    if (!fallback) throw new Error(`No fallback for ${this.#language}/${fileBaseName}`);\n    return new Labels(await this.#fetchLabelMap(this.#language, fileBaseName), await fallback);\n  }\n\n  async #fetchLabelMap(language: Language, fileId: FileBaseName): Promise<Map<string, string>> {\n    return new Map(Object.entries(await fetchJson(`${this.#baseUrl}/${language}/${fileId}.json`)));\n  }\n}\n\nexport class Labels {\n  #labels: Map<string, string>;\n  #fallback: Map<string, string>;\n\n  constructor(labels: Map<string, string>, defaultLabels: Map<string, string>) {\n    this.#labels = labels;\n    this.#fallback = defaultLabels;\n  }\n\n  get(key: string): string | undefined {\n    return this.#labels.get(key) ?? this.#fallback.get(key);\n  }\n}\n\nexport function resolveLanguage(languages: readonly string[]): Language {\n  for (const clientTag of languages) {\n    for (const [tag, lang] of Object.entries(LANGUAGE_TAGS)) {\n      if (clientTag.startsWith(tag)) return lang;\n    }\n  }\n  return LabelHolder.DEFAULT_LANGUAGE;\n}\n", "import { LANGUAGES, Language, resolveLanguage } from \"./labels\";\nimport { printError } from \"./utils\";\n\ninterface Doms {\n  language: HTMLSelectElement;\n}\n\nexport class LabelHandler {\n  private doms: Doms;\n  private listener: ((lang: Language) => void | Promise<void>)[] = [];\n\n  constructor(doms: Doms, navigatorLanguages: readonly string[]) {\n    this.doms = doms;\n    this.buildSelectOptions(navigatorLanguages);\n    this.doms.language.addEventListener(\"change\", () => {\n      this.listener.forEach((fn) => {\n        fn(this.doms.language.value as Language)?.catch(printError);\n      });\n    });\n  }\n\n  private buildSelectOptions(navigatorLanguages: readonly string[]) {\n    const existingLangs = new Set(Array.from(this.doms.language.options).map((o) => o.value));\n    for (const lang of LANGUAGES) {\n      if (existingLangs.has(lang)) {\n        continue;\n      }\n      const option = document.createElement(\"option\");\n      option.textContent = lang;\n      this.doms.language.appendChild(option);\n    }\n\n    const browserLang = resolveLanguage(navigatorLanguages);\n    if (this.doms.language.value !== browserLang) {\n      this.doms.language.value = resolveLanguage(navigatorLanguages);\n      requestAnimationFrame(() => this.doms.language.dispatchEvent(new Event(\"change\")));\n    }\n  }\n\n  addListener(fn: (lang: Language) => void | Promise<void>) {\n    this.listener.push(fn);\n  }\n}\n", "interface StateElement {\n  defaultValue: string;\n  element: HTMLInputElement;\n}\n\n// Store values of input elements in the URL query string.\nexport class UrlState {\n  private url: URL;\n  private inputs: Map<HTMLInputElement, StateElement>;\n  private udpateListeners: ((url: URL) => void)[] = [];\n\n  private constructor(browserUrl: URL, elements: ArrayLike<StateElement>) {\n    this.url = browserUrl;\n    this.inputs = new Map(Array.from(elements).map((e) => [e.element, e]));\n    this.init();\n  }\n\n  private init() {\n    for (const [input, { defaultValue }] of this.inputs.entries()) {\n      if (this.url.searchParams.has(input.id)) {\n        setValue(input, this.url.searchParams.get(input.id) ?? defaultValue);\n        input.dispatchEvent(new Event(\"input\"));\n      }\n\n      input.addEventListener(\"input\", () => {\n        this.updateUrl(input, defaultValue);\n        this.udpateListeners.forEach((fn) => {\n          fn(this.url);\n        });\n      });\n    }\n  }\n\n  static create(location: Location, elements: ArrayLike<HTMLInputElement>): UrlState {\n    return new UrlState(\n      new URL(location.href),\n      Array.from(elements).map((e) => ({ defaultValue: getValue(e), element: e })),\n    );\n  }\n\n  private updateUrl(input: HTMLInputElement, defaultValue: string) {\n    const value = getValue(input);\n    if (value === defaultValue) {\n      this.url.searchParams.delete(input.id);\n    } else {\n      this.url.searchParams.set(input.id, value);\n    }\n  }\n\n  addUpdateListener(listener: (url: URL) => void) {\n    this.udpateListeners.push(listener);\n  }\n}\n\nfunction getValue(input: HTMLInputElement): string {\n  switch (input.type) {\n    case \"checkbox\":\n      return input.checked ? \"t\" : \"\";\n    default:\n      return input.value;\n  }\n}\n\nfunction setValue(input: HTMLInputElement, value: string) {\n  switch (input.type) {\n    case \"checkbox\":\n      input.checked = value === \"t\";\n      break;\n    default:\n      input.value = value;\n  }\n}\n", "import * as presetButton from \"./lib/ui/preset-button\";\nimport * as syncOutput from \"./lib/ui/sync-output\";\nimport * as minMaxInputs from \"./lib/ui/min-max-inputs\";\nimport { DelayedRenderer } from \"./lib/delayed-renderer\";\nimport { component, fetchJson, printError } from \"./lib/utils\";\nimport { PrefabUpdate } from \"./lib/prefabs\";\nimport * as prefabsFilter from \"./worker/prefabs-filter\";\nimport { Language } from \"./lib/labels\";\nimport { LabelHandler } from \"./lib/label-handler\";\nimport { UrlState } from \"./lib/url-state\";\n\ninterface HighlightedPrefab {\n  name: string;\n  difficulty?: number;\n  highlightedName?: string;\n  highlightedLabel?: string;\n  matchedBlocks?: HighlightedBlock[];\n}\n\nfunction main() {\n  presetButton.init();\n  syncOutput.init();\n  minMaxInputs.init();\n\n  const urlState = UrlState.create(location, document.querySelectorAll(\"input\"));\n  urlState.addUpdateListener((url) => {\n    window.history.replaceState(null, \"\", url.toString());\n  });\n\n  const prefabsHandler = new PrefabsHandler(new Worker(\"worker/prefabs-filter.js\"));\n  (async () => {\n    const [prefabBlockCounts, difficulties] = await Promise.all([\n      fetchJson<PrefabBlockCounts>(\"prefab-block-counts.json\"),\n      fetchJson<PrefabDifficulties>(\"prefab-difficulties.json\"),\n    ]);\n    prefabsHandler.prefabs = Object.keys(prefabBlockCounts).map((n) => ({\n      name: n,\n      x: 0,\n      z: 0,\n      difficulty: difficulties[n] ?? 0,\n    }));\n  })().catch(printError);\n\n  const minTier = component(\"min_tier\", HTMLInputElement);\n  const maxTier = component(\"max_tier\", HTMLInputElement);\n  const tierRange = { start: minTier.valueAsNumber, end: maxTier.valueAsNumber };\n  prefabsHandler.tierRange = tierRange;\n  minTier.addEventListener(\"input\", () => {\n    const newMinTier = minTier.valueAsNumber;\n    if (newMinTier === tierRange.start) return;\n    tierRange.start = newMinTier;\n    if (newMinTier > maxTier.valueAsNumber) {\n      maxTier.value = minTier.value;\n      tierRange.end = newMinTier;\n      maxTier.dispatchEvent(new Event(\"input\"));\n    }\n    prefabsHandler.tierRange = tierRange;\n  });\n  maxTier.addEventListener(\"input\", () => {\n    const newMaxTier = maxTier.valueAsNumber;\n    if (newMaxTier === tierRange.end) return;\n    tierRange.end = newMaxTier;\n    if (newMaxTier < minTier.valueAsNumber) {\n      minTier.value = maxTier.value;\n      tierRange.start = newMaxTier;\n      minTier.dispatchEvent(new Event(\"input\"));\n    }\n    prefabsHandler.tierRange = tierRange;\n  });\n  const tierClear = component(\"tier_clear\", HTMLButtonElement);\n  tierClear.addEventListener(\"click\", () => {\n    minTier.value = minTier.defaultValue;\n    maxTier.value = maxTier.defaultValue;\n    minTier.dispatchEvent(new Event(\"input\"));\n    maxTier.dispatchEvent(new Event(\"input\"));\n  });\n\n  const prefabFilter = component(\"prefab_filter\", HTMLInputElement);\n  prefabsHandler.prefabFilter = prefabFilter.value;\n  prefabFilter.addEventListener(\"input\", () => {\n    prefabsHandler.prefabFilter = prefabFilter.value;\n  });\n\n  const blockFilter = component(\"block_filter\", HTMLInputElement);\n  prefabsHandler.blockFilter = blockFilter.value;\n  blockFilter.addEventListener(\"input\", () => {\n    prefabsHandler.blockFilter = blockFilter.value;\n  });\n\n  const labelHandler = new LabelHandler({ language: component(\"label_lang\", HTMLSelectElement) }, navigator.languages);\n  labelHandler.addListener((lang) => {\n    prefabsHandler.language = lang;\n  });\n\n  const prefabFilterHandler = new PrefabFilterHandler({ devPrefabs: component(\"dev_prefabs\", HTMLInputElement) });\n  prefabFilterHandler.addUpdateListener(() => {\n    prefabsHandler.refresh();\n  });\n\n  const prefabListRenderer = new DelayedRenderer<HighlightedPrefab>(document.documentElement, component(\"prefabs_list\"), (p) =>\n    prefabLi(p),\n  );\n  prefabsHandler.listeners.push((update) => {\n    prefabListRenderer.iterator = update.prefabs.filter(prefabFilterHandler.filter());\n  });\n\n  // Workaround that document.documentElement never fires \"scroll\" event\n  document.addEventListener(\"scroll\", () => {\n    document.documentElement.dispatchEvent(new Event(\"scroll\"));\n  });\n}\n\nfunction prefabLi(prefab: HighlightedPrefab) {\n  const li = document.createElement(\"li\");\n  li.innerHTML = [\n    ...(prefab.difficulty\n      ? [\n          `<span title=\"Difficulty Tier ${prefab.difficulty.toString()}\" class=\"prefab_difficulty_${prefab.difficulty.toString()}\">`,\n          `  \uD83D\uDC80${prefab.difficulty.toString()}`,\n          `</span>`,\n        ]\n      : []),\n    `<a href=\"prefabs/${prefab.name}.html\" target=\"_blank\">`,\n    prefab.highlightedLabel ?? \"-\",\n    \"/\",\n    `<small>${prefab.highlightedName ?? prefab.name}</small></a>`,\n    ...(prefab.matchedBlocks && prefab.matchedBlocks.length > 0 ? [\"has\", countHighlightedBlocks(prefab.matchedBlocks), \"blocks\"] : []),\n  ].join(\" \");\n  if (prefab.matchedBlocks && prefab.matchedBlocks.length > 0) {\n    const blocksUl = document.createElement(\"ul\");\n    prefab.matchedBlocks.forEach((block) => {\n      if (block.count === undefined) return;\n      const blockLi = document.createElement(\"li\");\n      blockLi.innerHTML = [\n        `<button data-input-for=\"blocks_filter\" data-input-text=\"${block.name}\" title=\"Filter with this block name\">\u25B2</button>`,\n        `${block.count.toString()}x`,\n        block.highlightedLabel,\n        `<small>${block.highlightedName}</small>`,\n      ].join(\" \");\n      blocksUl.appendChild(blockLi);\n    });\n    li.appendChild(blocksUl);\n  }\n  return li;\n}\n\nfunction countHighlightedBlocks(blocks: HighlightedBlock[]): number {\n  return blocks.reduce((acc, b) => acc + (b.count ?? 0), 0);\n}\n\ndeclare class PrefabsFilterWorker extends Worker {\n  postMessage(message: prefabsFilter.InMessage): void;\n}\n\nclass PrefabsHandler {\n  worker: PrefabsFilterWorker;\n  listeners: ((prefabs: PrefabUpdate) => void | Promise<void>)[] = [];\n\n  constructor(worker: PrefabsFilterWorker) {\n    this.worker = worker;\n    this.worker.addEventListener(\"message\", (event: MessageEvent<PrefabUpdate>) => {\n      for (const fn of this.listeners) {\n        fn(event.data)?.catch(printError);\n      }\n    });\n  }\n\n  set prefabs(p: Prefab[]) {\n    this.worker.postMessage({ all: p });\n  }\n\n  set tierRange(range: NumberRange) {\n    this.worker.postMessage({ difficulty: range });\n  }\n\n  set prefabFilter(filter: string) {\n    this.worker.postMessage({ prefabFilterRegexp: filter });\n  }\n\n  set blockFilter(filter: string) {\n    this.worker.postMessage({ blockFilterRegexp: filter });\n  }\n\n  set language(language: Language) {\n    this.worker.postMessage({ language });\n  }\n\n  refresh() {\n    this.worker.postMessage({});\n  }\n}\n\nconst DEV_PREFAB_REGEXP = /^(aaa_|AAA_|spacercise_|terrain_smoothing_bug)/;\n\nclass PrefabFilterHandler {\n  displayDevPrefab = false;\n  updateListener: (() => void)[] = [];\n\n  constructor(doms: { devPrefabs: HTMLInputElement }) {\n    this.displayDevPrefab = doms.devPrefabs.checked;\n    doms.devPrefabs.addEventListener(\"input\", () => {\n      this.displayDevPrefab = doms.devPrefabs.checked;\n      this.updateListener.forEach((fn) => {\n        fn();\n      });\n    });\n  }\n\n  filter(): (prefab: HighlightedPrefab) => boolean {\n    return (prefab) => {\n      if (!this.displayDevPrefab) {\n        return !DEV_PREFAB_REGEXP.test(prefab.name);\n      }\n      return true;\n    };\n  }\n\n  addUpdateListener(fn: () => void) {\n    this.updateListener.push(fn);\n  }\n}\n\nif (document.readyState === \"loading\") {\n  document.addEventListener(\"DOMContentLoaded\", main);\n} else {\n  main();\n}\n"],
  "mappings": "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",
  "names": ["requireNonnull", "errorMessage", "requireType", "o", "t", "errorMessage", "component", "id", "i", "requireNonnull", "e", "waitAnimationFrame", "r", "printError", "e", "fetchJson", "url", "r", "init", "target", "input", "component", "requireNonnull", "init", "eventName", "target", "outputElements", "output", "input", "component", "init", "eventName", "target", "updateMinMax", "input", "updateMaxValues", "updateMinValues", "minMaxId", "maxInputs", "maxInput", "oldValue", "dispatchInputEvent", "minInputs", "minInput", "DelayedRenderer", "printError", "scrollableWrapper", "appendee", "itemRenderer", "iteratorOrIterable", "chunkIterator", "renderUntil", "isFill", "self", "stopPredicate", "result", "isReturn", "df", "i", "waitAnimationFrame", "wrapper", "origin", "chunkSize", "returnResult", "chunkIter", "args", "chunk", "e", "r", "treturn", "LANGUAGES", "LANGUAGE_TAGS", "FILE_BASE_NAMES", "LabelHolder", "_LabelHolder", "#baseUrl", "#language", "#fallbacks", "#labels", "baseUrl", "navigatorLanguages", "resolveLanguage", "n", "#fetchLabelMap", "#buildAllLabels", "fileId", "labels", "lang", "#buildLabels", "fileBaseName", "fallback", "Labels", "language", "fetchJson", "#fallback", "defaultLabels", "key", "languages", "clientTag", "tag", "LabelHandler", "doms", "navigatorLanguages", "fn", "printError", "existingLangs", "o", "lang", "LANGUAGES", "option", "browserLang", "resolveLanguage", "UrlState", "_UrlState", "browserUrl", "elements", "e", "input", "defaultValue", "setValue", "fn", "location", "getValue", "value", "listener", "main", "init", "UrlState", "url", "prefabsHandler", "PrefabsHandler", "prefabBlockCounts", "difficulties", "fetchJson", "n", "printError", "minTier", "component", "maxTier", "tierRange", "newMinTier", "newMaxTier", "prefabFilter", "blockFilter", "LabelHandler", "lang", "prefabFilterHandler", "PrefabFilterHandler", "prefabListRenderer", "DelayedRenderer", "p", "prefabLi", "update", "prefab", "li", "countHighlightedBlocks", "blocksUl", "block", "blockLi", "blocks", "acc", "b", "worker", "event", "fn", "range", "filter", "language", "DEV_PREFAB_REGEXP", "doms"]
}
